drop table TP3_MEMBRE cascade constraints;

drop table TP3_PROJET cascade constraints;

drop table TP3_EQUIPE_PROJET cascade constraints;

drop table TP3_NOTIFICATION cascade constraints;

drop table TP3_RAPPORT cascade constraints;

drop table TP3_RAPPORT_ETAT cascade constraints;

drop table TP3_INSCRIPTION_CONFERENCE cascade constraints;

drop table TP3_CONFERENCE cascade constraints;

drop sequence NO_MEMBRE_SEQ;

drop sequence NO_PROJECT_SEQ;

create table TP3_MEMBRE (
    NO_MEMBRE number(9) not null,
    NOM_MEM varchar2(40) not null,
    PRENOM_MEM varchar2(40) not null,
    UTILISATEUR_MEM varchar2(40) not null,
    MOT_DE_PASSE_MEM varchar2(40) not null,
    ADRESSE_MEM varchar2(40) not null,
    CODE_POSTAL_MEM char(7) not null,
    PAYS_MEM varchar2(40) not null,
    TELEPHONE_MEM char(13) not null,
    FAX_MEM char(15) null,
    LANGUE_CORRESPONDANCE_MEM varchar2(40) default 'Francais' null,
    NOM_FICHIER_PHOTO_MEM varchar2(200) default 'C:\default_user_avatar.png' null,
    ADRESSE_WEB_MEM varchar2(40) null,
    INSTITUTION_MEM varchar2(40) null,
    COURRIEL_MEM varchar2(40) not null,
    EST_ADMINISTRATEUR_MEM number(1) default 0 null,
    EST_SUPERVISEUR_MEM number(1) default 0 null,
    EST_APPOUVEE_INSCRIPTION_MEM number(1) default 0 null,
    NO_MEMBRE_PATRON number(9) null,
    constraint PK_MEMBRE primary key(NO_MEMBRE),
    constraint AK_MEM_COURRIEL_MEM unique(COURRIEL_MEM),
    constraint AK_MEM_UTILISATEUR_MEM unique(UTILISATEUR_MEM),
    constraint AK_MEM_INFORMATIONS_MEM unique(PRENOM_MEM, NOM_MEM, ADRESSE_MEM, CODE_POSTAL_MEM),
    constraint FK_MEM_NO_MEMBRE_PATRON foreign key (NO_MEMBRE_PATRON) references TP3_MEMBRE(NO_MEMBRE)
);

create table TP3_PROJET (
    NO_PROJET number(9) not null,
    NOM_PRO varchar2(40) not null,
    MNT_ALLOUE_PRO number(10, 2) not null,
    STATUT_PRO varchar2(40) default 'Debute' null,
    DATE_DEBUT_PRO DATE not null,
    DATE_FIN_PRO DATE not null,
    constraint PK_PROJET primary key(NO_PROJET),
    constraint AK_PROJET_NOM_PRO unique(NOM_PRO)
);

create table TP3_EQUIPE_PROJET (
    NO_MEMBRE number(9) not null,
    NO_PROJET number(9) not null,
    EST_DIRECTEUR_PRO number(1) default 0 null,
    constraint PK_EQUIPE_PROJET primary key(NO_MEMBRE, NO_PROJET),
    constraint FK_EQUIPE_PROJET_NO_MEMBRE foreign key (NO_MEMBRE) references TP3_MEMBRE(NO_MEMBRE),
    constraint FK_EQUIPE_PROJET_NO_PROJET foreign key (NO_PROJET) references TP3_PROJET(NO_PROJET)
);

create table TP3_NOTIFICATION (
    NO_NOTIFICATION number(9) generated by default as identity start with 3000 increment by 1 not null,
    NOM_NOT varchar2(40) not null,
    DATE_ECHEANCE_NOT DATE not null,
    ETAT_NOT varchar2(20) default 'Non debute' null,
    NOTE_NOT varchar2(1000) default 'Aucune note' null,
    NO_MEM_ADMIN_CREATION number(9) not null,
    NO_MEM_ATTRIBUTION number(9) not null,
    constraint PK_NOTIFICATION primary key(NO_NOTIFICATION),
    constraint FK_NOTIFICATION_NO_MEM_ADMIN_CREATION foreign key (NO_MEM_ADMIN_CREATION) references TP3_MEMBRE(NO_MEMBRE),
    constraint FK_NOTIFICATION_NO_MEM_ATTRIBUTION foreign key (NO_MEM_ATTRIBUTION) references TP3_MEMBRE(NO_MEMBRE)
);

create table TP3_RAPPORT_ETAT (
    CODE_ETAT_RAP char(4) not null,
    NOM_ETAT_RAP varchar2(40) not null,
    constraint PK_RAPPORT_ETAT primary key(CODE_ETAT_RAP)
);

create table TP3_RAPPORT (
    NO_RAPPORT number(9) generated by default as identity start with 4000 increment by 2 not null,
    NO_PROJET number(9) not null,
    TITRE_RAP varchar2(100) not null,
    NOM_FICHIER_RAP varchar2(40) not null,
    DATE_DEPOT_RAP DATE not null,
    CODE_ETAT_RAP char(4) not null,
    constraint PK_RAPPORT primary key(NO_RAPPORT),
    constraint AK_RAPPORT_NOM_FICHIER_RAP unique(NOM_FICHIER_RAP),
    constraint FK_RAPPORT_NO_PROJET foreign key (NO_PROJET) references TP3_PROJET(NO_PROJET),
    constraint FK_RAPPORT_CODE_ETAT_RAP foreign key (CODE_ETAT_RAP) references TP3_RAPPORT_ETAT(CODE_ETAT_RAP)
);

create table TP3_CONFERENCE (
    SIGLE_CONFERENCE varchar2(10) not null,
    TITRE_CON varchar2(100) not null,
    DATE_DEBUT_CON DATE not null,
    DATE_FIN_CON DATE not null,
    LIEU_CON varchar2(40) not null,
    ADRESSE_CON varchar2(40) not null,
    constraint PK_CONFERENCE primary key(SIGLE_CONFERENCE),
    constraint AK_CONFERENCE_TITRE_CON unique(TITRE_CON)
);

create table TP3_INSCRIPTION_CONFERENCE (
    SIGLE_CONFERENCE varchar2(10) not null,
    NO_MEMBRE number(6) not null,
    DATE_DEMANDE_INS DATE not null,
    STATUT_APPROBATION_INS varchar2(40) not null,
    constraint PK_INSCRIPTION_CONFERENCE primary key(SIGLE_CONFERENCE, NO_MEMBRE),
    constraint FK_SIGLE_CONFERENCE foreign key (SIGLE_CONFERENCE) references TP3_CONFERENCE(SIGLE_CONFERENCE),
    constraint FK_NO_MEMBRE_IC foreign key (NO_MEMBRE) references TP3_MEMBRE(NO_MEMBRE)
);

create sequence NO_MEMBRE_SEQ start with 5 increment by 5;

create sequence NO_PROJECT_SEQ start with 1000 increment by 1;

create or replace view ADMINISTRATEUR (
    UTILISATEUR_ADMINISTRATEUR,
    MOT_DE_PASSE_ADM,
    COURRIEL_ADM,
    TEL_ADM,
    NOM_ADM,
    PRENOM_ADM,
    NO_MEMBRE
) as
    select
        UTILISATEUR_MEM,
        MOT_DE_PASSE_MEM,
        COURRIEL_MEM,
        TELEPHONE_MEM,
        NOM_MEM,
        PRENOM_MEM,
        NO_MEMBRE
    from
        TP3_MEMBRE
    where
        EST_ADMINISTRATEUR_MEM = 1;

create or replace view SUPERVISEUR (
    UTILISATEUR_SUPERVISEUR,
    MOT_DE_PASSE_SUP,
    COURRIEL_SUP,
    TEL_SUP,
    NOM_SUP,
    PRENOM_SUP,
    NO_MEMBRE
) as
    select
        UTILISATEUR_MEM,
        MOT_DE_PASSE_MEM,
        COURRIEL_MEM,
        TELEPHONE_MEM,
        NOM_MEM,
        PRENOM_MEM,
        NO_MEMBRE
    from
        TP3_MEMBRE
    where
        EST_SUPERVISEUR_MEM = 1;

insert into TP3_RAPPORT_ETAT (
    CODE_ETAT_RAP,
    NOM_ETAT_RAP
) values (
    'DE01',
    'Debute'
);

insert into TP3_RAPPORT_ETAT (
    CODE_ETAT_RAP,
    NOM_ETAT_RAP
) values (
    'VE02',
    'En verification'
);

insert into TP3_RAPPORT_ETAT (
    CODE_ETAT_RAP,
    NOM_ETAT_RAP
) values (
    'CO03',
    'En correction'
);

insert into TP3_RAPPORT_ETAT (
    CODE_ETAT_RAP,
    NOM_ETAT_RAP
) values (
    'AP04',
    'Approuve'
);

create or replace function FCT_GENERER_MOT_DE_PASSE(
    P_LENGTH number
) return varchar2 is
    L_PASSWORD          varchar2(14);
    L_INDEX             number := 0;
    L_RAND_INDEX        number;
    PASSWORD_LENGTH     number;
    CHARACTERS_PASSWORD varchar2(69) := 'abcdefghijklmnopqrstuvwxyzABCDEFGEIJKLMNOPQRSTUVWXYZ1234567890!?&$/|#';
begin
    if P_LENGTH < 7 then
        PASSWORD_LENGTH := 7;
    elsif P_LENGTH > 14 then
        PASSWORD_LENGTH := 14;
    else
        PASSWORD_LENGTH := P_LENGTH;
    end if;
    loop
        if L_INDEX = PASSWORD_LENGTH then
            EXIT;
        end if;
        L_RAND_INDEX := FLOOR(DBMS_RANDOM.VALUE(0, 69));
        L_PASSWORD := L_PASSWORD
            || SUBSTR(CHARACTERS_PASSWORD, L_RAND_INDEX, 1);
        L_INDEX := L_INDEX + 1;
    end loop;
    return L_PASSWORD;
end;
/

drop table TP3_PROJET_ARCHIVE cascade constraints;

drop table TP3_RAPPORT_ARCHIVE cascade constraints;

create table TP3_PROJET_ARCHIVE as
    select
        *
    from
        TP3_PROJET
    where
        1 = 2;

create table TP3_RAPPORT_ARCHIVE as
    select
        *
    from
        TP3_RAPPORT
    where
        1 = 2;

set SERVEROUTPUT ON;

/******************************************************************************\
*                                                                              *
*                                     TP3                                      *
*                                                                              *
\******************************************************************************/

-- Admin
insert into TP3_MEMBRE (
    NO_MEMBRE,
    NOM_MEM,
    PRENOM_MEM,
    UTILISATEUR_MEM,
    MOT_DE_PASSE_MEM,
    ADRESSE_MEM,
    CODE_POSTAL_MEM,
    PAYS_MEM,
    TELEPHONE_MEM,
    FAX_MEM,
    ADRESSE_WEB_MEM,
    INSTITUTION_MEM,
    COURRIEL_MEM,
    EST_ADMINISTRATEUR_MEM,
    EST_SUPERVISEUR_MEM,
    EST_APPOUVEE_INSCRIPTION_MEM,
    NO_MEMBRE_PATRON
) values (
    NO_MEMBRE_SEQ.nextval,
    'Couhier',
    'Anthony',
    'Syamie',
    'azerty',
    '2200 chemin saint-foy',
    'G1V 1S4',
    'Canada',
    '(111)111-1111',
    '+1 111-111-1111',
    'https://url-to-web.com',
    'Universite Laval',
    'anthony.couhier.1@ulaval.ca',
    1,
    1,
    1,
    null
);

-- Superviseur
insert into TP3_MEMBRE (
    NO_MEMBRE,
    NOM_MEM,
    PRENOM_MEM,
    UTILISATEUR_MEM,
    MOT_DE_PASSE_MEM,
    ADRESSE_MEM,
    CODE_POSTAL_MEM,
    PAYS_MEM,
    TELEPHONE_MEM,
    FAX_MEM,
    ADRESSE_WEB_MEM,
    INSTITUTION_MEM,
    COURRIEL_MEM,
    EST_SUPERVISEUR_MEM,
    EST_APPOUVEE_INSCRIPTION_MEM,
    NO_MEMBRE_PATRON
) values (
    NO_MEMBRE_SEQ.nextval,
    'Benarroche',
    'Ilan',
    'Ilano',
    (select FCT_GENERER_MOT_DE_PASSE(12) from DUAL),
    '3140 rue France-Prime',
    'G1W 2P3',
    'Canada',
    '(222)222-2222',
    '+1 222-222-2222',
    'https://url-to-web.com',
    'Universite Laval',
    'ilan.benarroche.1@ulaval.ca',
    1,
    1,
    null
);

-- Directeur
insert into TP3_MEMBRE (
    NO_MEMBRE,
    NOM_MEM,
    PRENOM_MEM,
    UTILISATEUR_MEM,
    MOT_DE_PASSE_MEM,
    ADRESSE_MEM,
    CODE_POSTAL_MEM,
    PAYS_MEM,
    TELEPHONE_MEM,
    FAX_MEM,
    ADRESSE_WEB_MEM,
    INSTITUTION_MEM,
    COURRIEL_MEM,
    EST_APPOUVEE_INSCRIPTION_MEM,
    NO_MEMBRE_PATRON
) values (
    NO_MEMBRE_SEQ.nextval,
    'Fumey',
    'Julien',
    'Juju',
    (select FCT_GENERER_MOT_DE_PASSE(12) from DUAL),
    '3140 rue france-prime',
    'G1W 2P3',
    'Canada',
    '(000)333-4444',
    null,
    null,
    'Laval',
    'julien.fumey@laval.ca',
    1,
    (select NO_MEMBRE from TP3_MEMBRE where NO_MEMBRE = 10)
);

-- Second directeur, pas demandé dans le test, juste pour éviter qu'un membre soit directeur de tout les projets
insert into TP3_MEMBRE (
    NO_MEMBRE,
    NOM_MEM,
    PRENOM_MEM,
    UTILISATEUR_MEM,
    MOT_DE_PASSE_MEM,
    ADRESSE_MEM,
    CODE_POSTAL_MEM,
    PAYS_MEM,
    TELEPHONE_MEM,
    FAX_MEM,
    ADRESSE_WEB_MEM,
    INSTITUTION_MEM,
    COURRIEL_MEM,
    EST_APPOUVEE_INSCRIPTION_MEM,
    NO_MEMBRE_PATRON
) values (
    NO_MEMBRE_SEQ.nextval,
    'Dir',
    'Paul',
    'Po',
    (select FCT_GENERER_MOT_DE_PASSE(12) from DUAL),
    '1111 universite',
    'G1W 2P3',
    'Canada',
    '(555)333-4444',
    null,
    null,
    'Laval',
    'paul.dir@laval.ca',
    1,
    (select NO_MEMBRE from TP3_MEMBRE where NO_MEMBRE = 10)
);

-- Lambda
insert into TP3_MEMBRE (
    NO_MEMBRE,
    NOM_MEM,
    PRENOM_MEM,
    UTILISATEUR_MEM,
    MOT_DE_PASSE_MEM,
    ADRESSE_MEM,
    CODE_POSTAL_MEM,
    PAYS_MEM,
    TELEPHONE_MEM,
    FAX_MEM,
    ADRESSE_WEB_MEM,
    INSTITUTION_MEM,
    COURRIEL_MEM,
    EST_APPOUVEE_INSCRIPTION_MEM,
    NO_MEMBRE_PATRON
) values (
    NO_MEMBRE_SEQ.nextval,
    'Del',
    'Reno',
    'random',
    (select FCT_GENERER_MOT_DE_PASSE(12) from DUAL),
    '2155 rue du soleil',
    'G1V 1S2',
    'Canada',
    '(444)444-4444',
    null,
    null,
    'Laval',
    'reno.del@laval.ca',
    1,
    (select NO_MEMBRE from TP3_MEMBRE where NO_MEMBRE = 10)
);


insert into TP3_PROJET (
    NO_PROJET,
    NOM_PRO,
    MNT_ALLOUE_PRO,
    STATUT_PRO,
    DATE_DEBUT_PRO,
    DATE_FIN_PRO
) values (
    NO_PROJECT_SEQ.nextval,
    'TP1 - Gestion de projet',
    115.23,
    'Termine',
    ADD_MONTHS(SYSDATE, -28),
    ADD_MONTHS(SYSDATE, -27)
);

insert into TP3_PROJET (
    NO_PROJET,
    NOM_PRO,
    MNT_ALLOUE_PRO,
    STATUT_PRO,
    DATE_DEBUT_PRO,
    DATE_FIN_PRO
) values (
    NO_PROJECT_SEQ.nextval,
    'TP2 - Gestion de projet',
    115.23,
    'Termine',
    to_date('21-10-16', 'RR-MM-DD'),
    to_date('21-11-16', 'RR-MM-DD')
);

insert into TP3_PROJET (
    NO_PROJET,
    NOM_PRO,
    MNT_ALLOUE_PRO,
    STATUT_PRO,
    DATE_DEBUT_PRO,
    DATE_FIN_PRO
) values (
    NO_PROJECT_SEQ.nextval,
    'TP3 - Gestion de projet',
    115.23,
    'En cours',
    to_date('22-11-16', 'RR-MM-DD'),
    to_date('22-12-16', 'RR-MM-DD')
);

insert into TP3_PROJET (
    NO_PROJET,
    NOM_PRO,
    MNT_ALLOUE_PRO,
    STATUT_PRO,
    DATE_DEBUT_PRO,
    DATE_FIN_PRO
) values (
    NO_PROJECT_SEQ.nextval,
    'Rendu 1 - Dev web',
    1235,
    'Termine',
    to_date('14-09-24', 'RR-MM-DD'),
    to_date('14-10-30', 'RR-MM-DD')
);

insert into TP3_PROJET (
    NO_PROJET,
    NOM_PRO,
    MNT_ALLOUE_PRO,
    STATUT_PRO,
    DATE_DEBUT_PRO,
    DATE_FIN_PRO
) values (
    NO_PROJECT_SEQ.nextval,
    'Rendu 2 - Dev web',
    1235,
    'En cours',
    to_date('22-11-01', 'RR-MM-DD'),
    to_date('22-12-20', 'RR-MM-DD')
);

insert into TP3_PROJET (
    NO_PROJET,
    NOM_PRO,
    MNT_ALLOUE_PRO,
    STATUT_PRO,
    DATE_DEBUT_PRO,
    DATE_FIN_PRO
) values (
    NO_PROJECT_SEQ.nextval,
    'Rendu 3 - Dev web',
    1235,
    'Non debute',
    to_date('22-01-03', 'RR-MM-DD'),
    to_date('22-02-15', 'RR-MM-DD')
);

insert into TP3_PROJET (
    NO_PROJET,
    NOM_PRO,
    MNT_ALLOUE_PRO,
    STATUT_PRO,
    DATE_DEBUT_PRO,
    DATE_FIN_PRO
) values (
    NO_PROJECT_SEQ.nextval,
    'Lab1 - Base de donnee',
    1235,
    'Termine',
    to_date('19-01-03', 'RR-MM-DD'),
    to_date('19-02-15', 'RR-MM-DD')
);

/*
** Equipe projet 1
*/

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET,
    EST_DIRECTEUR_PRO
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Fumey'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP1 - Gestion de projet'),
    1
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Del'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP1 - Gestion de projet')
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Benarroche'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP1 - Gestion de projet')
);


/*
** Equipe projet 2
*/

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET,
    EST_DIRECTEUR_PRO
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Fumey'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP2 - Gestion de projet'),
    1
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Del'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP2 - Gestion de projet')
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Benarroche'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP2 - Gestion de projet')
);

/*
** Equipe projet 3
*/

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET,
    EST_DIRECTEUR_PRO
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Fumey'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP3 - Gestion de projet'),
    1
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Del'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP3 - Gestion de projet')
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Benarroche'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP3 - Gestion de projet')
);

/*
** Equipe projet 4
*/

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET,
    EST_DIRECTEUR_PRO
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Dir'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 1 - Dev web'),
    1
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Del'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 1 - Dev web')
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Benarroche'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 1 - Dev web')
);

/*
** Equipe projet 5
*/

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET,
    EST_DIRECTEUR_PRO
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Dir'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 2 - Dev web'),
    1
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Del'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 2 - Dev web')
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Benarroche'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 2 - Dev web')
);

/*
** Equipe projet 6
*/

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET,
    EST_DIRECTEUR_PRO
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Dir'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 3 - Dev web'),
    1
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Couhier'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 3 - Dev web')
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Benarroche'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 3 - Dev web')
);

/*
** Equipe projet 7
*/

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET,
    EST_DIRECTEUR_PRO
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Dir'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Lab1 - Base de donnee'),
    1
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Couhier'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Lab1 - Base de donnee')
);

insert into TP3_EQUIPE_PROJET (
    NO_MEMBRE,
    NO_PROJET
) values (
    (select NO_MEMBRE from TP3_MEMBRE where NOM_MEM = 'Benarroche'),
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Lab1 - Base de donnee')
);


insert into TP3_RAPPORT (
    NO_PROJET,
    TITRE_RAP,
    NOM_FICHIER_RAP,
    DATE_DEPOT_RAP,
    CODE_ETAT_RAP
) values (
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP1 - Gestion de projet'),
    'Rapport initial TP1 - Gestion de projet',
    'initial TP1 - Gestion de projet.docx',
    to_date('22-11-10', 'RR-MM-DD'),
    'AP04'
);

insert into TP3_RAPPORT (
    NO_PROJET,
    TITRE_RAP,
    NOM_FICHIER_RAP,
    DATE_DEPOT_RAP,
    CODE_ETAT_RAP
) values (
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP1 - Gestion de projet'),
    'Rapport final TP1 - Gestion de projet',
    'final TP1 - Gestion de projet.docx',
    to_date('22-11-10', 'RR-MM-DD'),
    'AP04'
);

insert into TP3_RAPPORT (
    NO_PROJET,
    TITRE_RAP,
    NOM_FICHIER_RAP,
    DATE_DEPOT_RAP,
    CODE_ETAT_RAP
) values (
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP3 - Gestion de projet'),
    'Rapport initial TP3 - Gestion de projet',
    'initial TP3 - Gestion de projet.docx',
    to_date('22-11-10', 'RR-MM-DD'),
    'AP04'
);

insert into TP3_RAPPORT (
    NO_PROJET,
    TITRE_RAP,
    NOM_FICHIER_RAP,
    DATE_DEPOT_RAP,
    CODE_ETAT_RAP
) values (
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'TP3 - Gestion de projet'),
    'Rapport final TP3 - Gestion de projet',
    'final TP3 - Gestion de projet.docx',
    to_date('22-11-10', 'RR-MM-DD'),
    'VE02'
);

insert into TP3_RAPPORT (
    NO_PROJET,
    TITRE_RAP,
    NOM_FICHIER_RAP,
    DATE_DEPOT_RAP,
    CODE_ETAT_RAP
) values (
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 2 - Dev web'),
    'Rapport initial Rendu 2 - Dev web',
    'initial Rendu 2 - Dev web.docx',
    to_date('22-11-10', 'RR-MM-DD'),
    'AP04'
);

insert into TP3_RAPPORT (
    NO_PROJET,
    TITRE_RAP,
    NOM_FICHIER_RAP,
    DATE_DEPOT_RAP,
    CODE_ETAT_RAP
) values (
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 2 - Dev web'),
    'Rapport suivit Rendu 2 - Dev web',
    'suivit Rendu 2 - Dev web.docx',
    to_date('22-11-10', 'RR-MM-DD'),
    'CO03'
);

insert into TP3_RAPPORT (
    NO_PROJET,
    TITRE_RAP,
    NOM_FICHIER_RAP,
    DATE_DEPOT_RAP,
    CODE_ETAT_RAP
) values (
    (select NO_PROJET from TP3_PROJET where NOM_PRO = 'Rendu 3 - Dev web'),
    'Rapport final Rendu 3 - Dev web',
    'final Rendu 3 - Dev web.docx',
    to_date('22-11-10', 'RR-MM-DD'),
    'DE01'
);

create or replace procedure TP3_SP_ARCHIVER_PROJET(
    P_DATE date,
    ADMIN_USER number
) is
    L_COUNT_MEMBRE number;
    E_INVALID_DATE exception;
    E_INVALID_ADMIN exception;
    cursor C_PROJET is
        select
            *
        from
            TP3_PROJET
        where
            DATE_FIN_PRO < P_DATE
            and STATUT_PRO = 'Termine'
            and not exists (
                select
                    *
                from
                    TP3_RAPPORT_ARCHIVE
            );
begin
    if ADD_MONTHS(SYSDATE, -24) < P_DATE then
        raise E_INVALID_DATE;
    end if;
    select count(*) into L_COUNT_MEMBRE from ADMINISTRATEUR where NO_MEMBRE = ADMIN_USER;
    if L_COUNT_MEMBRE != 1 then
        raise E_INVALID_ADMIN;
    end if;

    -- TODO TESTER AVEC 'fetch first 1 rows only' with the where NO_PROJET > actual_project
    for R_PROJET in C_PROJET loop
        insert into TP3_PROJET_ARCHIVE values R_PROJET;
        insert into TP3_RAPPORT_ARCHIVE select * from TP3_RAPPORT where TP3_RAPPORT.NO_PROJET = R_PROJET.NO_PROJET;
        delete from TP3_EQUIPE_PROJET where TP3_EQUIPE_PROJET.NO_PROJET = R_PROJET.NO_PROJET;
        delete from TP3_RAPPORT where TP3_RAPPORT.NO_PROJET = R_PROJET.NO_PROJET;
        delete from TP3_PROJET where TP3_PROJET.NO_PROJET = R_PROJET.NO_PROJET;
    end loop;
exception
    when E_INVALID_DATE THEN
        DBMS_OUTPUT.PUT_LINE('Set a date that is older than 2 years');
    when E_INVALID_ADMIN then
        DBMS_OUTPUT.PUT_LINE('NO_MEMBRE ' || ADMIN_USER || ' is not an administrator');
end;
/

exec TP3_SP_ARCHIVER_PROJET(to_date('20-11-10', 'RR-MM-DD'), 5);

SELECT * FROM TP3_PROJET
    where NO_PROJET in
        (select NO_PROJET from TP3_EQUIPE_PROJET where NO_MEMBRE = 5)
    order by DATE_DEBUT_PRO desc;
    
SELECT * FROM (
                SELECT  * FROM TP3_PROJET
                UNION ALL
                SELECT  * FROM TP3_PROJET_ARCHIVE
)
where NO_PROJET = 1001;
-- ORDER BY DATE_DEBUT_PRO desc

SELECT * FROM ( select * from TP3_PROJET union all select * from TP3_PROJET_ARCHIVE ) where NO_PROJET = 1003 fetch first 1 rows only;
